/* -*- mode: c++; indent-tabs-mode: nil -*- */
/*
    QC_SocketPollOperationBase.qpp

    SocketPollOperationBase class definition

    Qore Programming Language

    Copyright (C) 2003 - 2024 Qore Technologies, s.r.o.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.

    Note that the Qore library is released under a choice of three open-source
    licenses: MIT (as above), LGPL 2+, or GPL 2+; see README-LICENSE for more
    information.
*/

#include "qore/Qore.h"
#include "qore/intern/QC_SocketPollOperationBase.h"

//! Abstract poll operation object returned by Socket polling methods
/** This class implements the polling logic and the state machine behind it

    It has two private members:
    - object sock: the socket object
    - string goal: the polling goal

    This class is only usable by internal classes; it is not directly usable by %Qore classes.

    @since %Qore 1.12
*/
qclass SocketPollOperationBase [private_members=object sock,string goal,auto data_save; ns=Qore; arg=SocketPollOperationBase* poll; vparent=AbstractPollOperation];

//! Throws an exception; this class is not usable by %Qore classes
/** @throw INTERNAL-ONLY this class is not usable by %Qore classes
*/
SocketPollOperationBase::constructor() {
    xsink->raiseException("INTERNAL-ONLY", "the SocketPollOperationBase class is not usable by %Qore classes; "
        "inherit a builtin derived class");
}

//! Destroys the object
/**
*/
SocketPollOperationBase::destructor() {
    poll->deref(xsink);
}

//! Returns the goal
/** @return the goal set in the constructor
*/
string SocketPollOperationBase::getGoal() {
    return self->getReferencedMemberNoMethod("goal", xsink);
}

//! Returns the current state
/** @return the current state
*/
string SocketPollOperationBase::getState() [flags=RET_VALUE_ONLY] {
    return poll->getState();
}

//! Returns @ref True when the goal as been reached
/** @return @ref True when the goal as been reached
*/
bool SocketPollOperationBase::goalReached() [flags=RET_VALUE_ONLY] {
    return poll->goalReached();
}

//! Returns any output generated by any completed poll action
/** @return any output generated by any completed poll action
 */
auto SocketPollOperationBase::getOutput() [flags=RET_VALUE_ONLY] {
    return poll->getOutput();
}
