#!/usr/bin/env qore
# -*- mode: qore; indent-tabs-mode: nil -*-

%new-style
%enable-all-warnings
%require-types
%strict-args

%requires ../../../../qlib/QUnit.qm

%exec-class OverloadTest

string sub f1_test(string x) {
    return type(x);
}

string sub f1_test(float x) {
    return type(x);
}

string sub f_test(int x) {
    return type(x);
}

string sub f_test(float x) {
    return type(x);
}

public class OverloadTest inherits QUnit::Test {
    constructor() : Test("Overload test", "1.0") {
        addTestCase("Values test", \testValues(), NOTHING);
        addTestCase("Variables test", \testVariables(), NOTHING);

        # Return for compatibility with test harness that checks return value.
        set_return_value(main());
    }

    testValues() {
        assertEq("integer", f_test(1));
        assertEq("float", f_test(1.1));
        assertEq("float", f1_test(1));
        assertEq("float", f1_test(1.1));
        assertEq("string", f1_test("str"));
        assertEq("string", f1_test("1.11"));

        testAssertion("test not-existing overload", \f1_test(), (123.456n,), new TestResultExceptionType("RUNTIME-OVERLOAD-ERROR"));
    }

    testVariables() {
        int i = 1;
        float fi = 1.1;
        assertEq("integer", f_test(i));
        assertEq("float", f1_test(i));
        assertEq("float", f_test(fi));
        assertEq("float", f1_test(fi));
    }
}
