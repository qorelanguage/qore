#!/usr/bin/env qore
# -*- mode: qore; indent-tabs-mode: nil -*-

%new-style
%enable-all-warnings
%require-types
%strict-args

%requires ../../../../qlib/QUnit.qm

%exec-class FloorTest

public class FloorTest inherits QUnit::Test {
    constructor() : Test("FloorTest", "1.1", \ARGV) {
        addTestCase("Floor test", \testFloor(), NOTHING);
        addTestCase("Zero test", \testFloorZero(), NOTHING);
        addTestCase("Negative values test", \testFloorNegativeValues(), NOTHING);

        # Return for compatibility with test harness that checks return value.
        set_return_value(main());
    }

    testFloor() {
        testAssertion("test floor 3.7", \floor(), (3.7,), 3.0);
        testAssertion("test floor 0.7", \floor(), (0.7,), 0.0);
        testAssertion("test floor 2.999999999999", \floor(), (2.999999999999,), 2.0);
    }

    testFloorZero() {
        testAssertion("test floor 0.0", \floor(), (0.0,), 0.0);
        testAssertion("test floor -0.0", \floor(), (-0.0,), 0.0);
    }

    testFloorNegativeValues() {
        testAssertion("test floor -1.0", \floor(), (-1.0,), -1.0);
        testAssertion("test floor -1.3", \floor(), (-1.3,), -2.0);
        testAssertion("test floor -0.1", \floor(), (-0.1,), -1.0);
        testAssertion("test floor -1.00000000001", \floor(), (-1.00000001,), -2.0);
    }
}
