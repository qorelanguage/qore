#! /usr/bin/env qore
# -*- mode: qore; indent-tabs-mode: nil -*-

%new-style
%enable-all-warnings
%require-types
%strict-args

%requires ../../../../qlib/QUnit.qm

%exec-class CeilTest

public class CeilTest inherits QUnit::Test {
    constructor() : Test("CeilTest", "1.1") {
        addTestCase("Ceil without precision test", \testZeroPrecision(), NOTHING);
        addTestCase("Positive precision test", \testPositivePrecision(), NOTHING);
        addTestCase("Negative precision test", \testNegativePrecision(), NOTHING);

        # Return for compatibility with test harness that checks return value.
        set_return_value(main());
    }

    testZeroPrecision() {
        testAssertion("test ceil(        6538738)",  \ceil(), (        6538738),         6538738);
        testAssertion("test ceil(-27457456938463)",  \ceil(), (-27457456938463), -27457456938463);
        testAssertion("test ceil( -2745745693846n)", \ceil(), ( -2745745693846n), -2745745693846n);

        testAssertion("test ceil( 27.57456       )", \ceil(), ( 27.57456       ),  28.0);
        testAssertion("test ceil(-27.5           )", \ceil(), (-27.5           ), -27.0);
        testAssertion("test ceil(  3.00000001    )", \ceil(), (  3.00000001    ),   4.0);
        testAssertion("test ceil(-27.99999999999n)", \ceil(), (-27.99999999999n), -27n);

        testAssertion("test ceil( 0)",   \ceil(), ( 0),   0);
        testAssertion("test ceil( 0n)",  \ceil(), ( 0n),  0n);
        testAssertion("test ceil(-0.0)", \ceil(), (-0.0), 0.0);
    }

    testPositivePrecision() {
        assertEq      ( 2345.35,        ceil( 2345.34454,       2));
        assertEq      (-2345.344,       ceil(-2345.34454,       3));
        assertNumberEq( 2345.344548n,   ceil( 2345.3445475543n, 6), 10e-36);
        assertNumberEq( 2345.34454756n, ceil( 2345.3445475543n, 8), 10e-36);
        assertNumberEq(-2345.34454755n, ceil(-2345.3445475543n, 8), 10e-36);
    }

    testNegativePrecision() {
        testAssertion("test ceil( 54174,    -2)", \ceil(), ( 54174,    -2),   54200);
        testAssertion("test ceil( 54174.24, -3)", \ceil(), ( 54174.24, -3),   55000.0);
        testAssertion("test ceil( 54174.54, -4)", \ceil(), ( 54174.54, -4),   60000.0);
        testAssertion("test ceil(-54174.23, -4)", \ceil(), (-54174.23, -4),  -50000.0);
        testAssertion("test ceil( 54174,    -5)", \ceil(), ( 54174,    -5),  100000);
        testAssertion("test ceil( 54174.0,  -6)", \ceil(), ( 54174.0,  -6), 1000000.0);
        testAssertion("test ceil(-54174,    -9)", \ceil(), (-54174,    -9),       0);

        testAssertion("test ceil(        5262654174.23n, -5)", \ceil(), (        5262654174.23n, -5),         5262700000n);
        testAssertion("test ceil(     -262654174983,     -7)", \ceil(), (     -262654174983,     -7),      -262650000000);
        testAssertion("test ceil(-26265417498326484n,   -11)", \ceil(), (-26265417498326484n,   -11), -26265400000000000n);
    }
}
