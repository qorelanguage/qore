#!/usr/bin/env qore
# -*- mode: qore; indent-tabs-mode: nil -*-

%new-style
%enable-all-warnings
%require-types
%strict-args

%requires ../../../../qlib/QUnit.qm

%exec-class MaxThreadCountTest

our Queue q;

public class MaxThreadCountTest inherits QUnit::Test {
    constructor() : Test("Max thread count test", "1.0") {
        addTestCase("Test max thread count", \testMaxThreadCount(), NOTHING);

        # Return for compatibility with test harness that checks return value.
        set_return_value(main());
    }

    globalSetUp() {
        q = new Queue();
    }

    t() {
        q.get();
        q.push(1);
    }

    testMaxThreadCount() {
        if (ENV.SKIP_MAX_THREAD_TEST) {
            testSkip("skipping max thread test due to environment variable");
        }

        try {
            while (True) {
                background t();
            }
        } catch (hash<ExceptionInfo> ex) {
            assertEq("THREAD-CREATION-FAILURE", ex.err, "found threads count limit");
            q.push(1);
        }

        int nt = num_threads();
        assertTrue(nt > 1, "number of threads is " + nt);
    }
}
