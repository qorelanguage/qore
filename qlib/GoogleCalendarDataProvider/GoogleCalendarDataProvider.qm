# -*- mode: qore; indent-tabs-mode: nil -*-
#! Qore GoogleCalendarDataProvider module definition

/*  GoogleCalendarDataProvider.qm Copyright 2023 - 2024 Qore Technologies, s.r.o.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

# minimum required Qore version
%requires qore >= 2.0
# assume local scope for variables, do not use "$" signs
%new-style
# require type definitions everywhere
%require-types
# strict argument handling
%strict-args
# enable all warnings
%enable-all-warnings

%requires(reexport) DataProvider
%requires(reexport) GoogleDataProvider
%requires(reexport) GoogleRestClient

module GoogleCalendarDataProvider {
    version = "2.0";
    desc = "user module providing a data provider API for Google calendar REST cloud services";
    author = "David Nichols <david@qore.org>";
    url = "http://qore.org";
    license = "MIT";
    init = sub () {
        # register the data provider factory
        DataProvider::registerFactory(new GoogleCalendarDataProviderFactory());

        DataProviderActionCatalog::registerApp(<DataProviderAppInfo>{
            "name": GoogleCalendarDataProvider::CalendarAppName,
            "display_name": "Google Calendar",
            "short_desc": "Google calendar services",
            "desc": "Google calendar services",
            "scheme": "gcal",
            "logo": GoogleCalendarLogo,
            "logo_file_name": "google-calendar-logo.svg",
            "logo_mime_type": MimeTypeSvg,
        });

        # register all supported actions
        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": GoogleCalendarDataProvider::CalendarAppName,
            "path": "/calendars/{calendar}/events/quickAdd",
            "path_vars": {
                "calendar": <DataProviderPathVarInfo>{
                    "display_name": "Calendar",
                    "short_desc": "The calendar to add the event to",
                    "desc": "The calendar to add the event to",
                    "example_value": "primary",
                },
            },
            "action": "quick-add-event",
            "display_name": "Add Event From Text",
            "short_desc": "Quickly add an event to a calendar from text",
            "desc": "Quickly add an event to a calendar from text; ex: 'Lunch at the Burger Bar from 12:30-13:30 "
                "tomorrow'",
            "action_code": DPAT_API,
            "convenience_options": {
                "text": <ActionOptionInfo>{
                    "display_name": "Event Description",
                    "short_desc": "The text describing the event to be created",
                    "desc": "The text describing the event to be created; ex: `Appointment at Somewhere on June 3rd "
                        "10am-10:25am`",
                    "type": "string",
                    "example_value": "Lunch tomorrow at the Burger Bar from 12:30-13:30",
                    "required": True,
                    "preselected": True,
                },
            },
            "advanced_options": {
                "sendUpdates": <ActionOptionInfo>{
                    "display_name": "Send Updates",
                    "short_desc": "Guests who should receive notifications about the event update",
                    "type": "string",
                    "desc": "Guests who should receive notifications about the event update (for example, title changes, "
                        "etc.).\n"
                        "Acceptable values are:\n"
                        "- `all`: Notifications are sent to all guests\n"
                        "- `externalOnly`: Notifications are sent to non-Google Calendar guests only\n"
                        "- `none`: No notifications are sent. For calendar migration tasks, consider using the "
                            "`Events.import` method instead",
                    "allowed_values": (
                        <AllowedValueInfo>{
                            "value": "all",
                            "desc": "Notifications are sent to all guests",
                        },
                        <AllowedValueInfo>{
                            "value": "externalOnly",
                            "desc": "Notifications are sent to non-Google Calendar guests only",
                        },
                        <AllowedValueInfo>{
                            "value": "none",
                            "desc": "No notifications are sent. For calendar migration tasks, consider using the "
                                "`Events.import` method instead",
                        },
                    ),
                },
            },
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": GoogleCalendarDataProvider::CalendarAppName,
            "path": "/calendars/{calendar}/events/insert",
            "path_vars": {
                "calendar": <DataProviderPathVarInfo>{
                    "display_name": "Calendar",
                    "short_desc": "The calendar to add the event to",
                    "desc": "The calendar to add the event to",
                    "example_value": "primary",
                },
            },
            "action": "create-event",
            "display_name": "Create Event",
            "short_desc": "Create an event in a calendar",
            "desc": "Create an event in a calendar",
            "action_code": DPAT_API,
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": GoogleCalendarDataProvider::CalendarAppName,
            "path": "/calendars/{calendar}/events/update",
            "path_vars": {
                "calendar": <DataProviderPathVarInfo>{
                    "display_name": "Calendar",
                    "short_desc": "The calendar to add the event to",
                    "desc": "The calendar to add the event to",
                    "example_value": "primary",
                },
            },
            "action": "update-event",
            "display_name": "Update Event",
            "short_desc": "Update an event in a calendar",
            "desc": "Update an event in a calendar",
            "action_code": DPAT_API,
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": GoogleCalendarDataProvider::CalendarAppName,
            "path": "/calendars/{calendar}/events/delete",
            "path_vars": {
                "calendar": <DataProviderPathVarInfo>{
                    "display_name": "Calendar",
                    "short_desc": "The calendar to add the event to",
                    "desc": "The calendar to add the event to",
                    "example_value": "primary",
                },
            },
            "action": "delete-event",
            "display_name": "Delete Event",
            "short_desc": "Delete an event from a calendar",
            "desc": "Delete an event from a calendar",
            "action_code": DPAT_API,
        });
    };
}

/** @mainpage GoogleCalendarDataProvider Module

    @tableofcontents

    @section googledataproviderintro Introduction to the GoogleCalendarDataProvider Module

    The %GoogleCalendarDataProvider module provides a @ref dataproviderintro "data provider" API for Google cloud REST API
    services.

    This data provider provides Google API access to the complete Google calendar API as defined by Google's Discovery
    API; some example data providers are listed below:
    - calendarList:
      - <b><tt>calendarList/delete</tt></b>
      - <b><tt>calendarList/get</tt></b>
      - <b><tt>calendarList/insert</tt></b>
      - <b><tt>calendarList/list</tt></b>
      - <b><tt>calendarList/patch</tt></b>
      - <b><tt>calendarList/update</tt></b>
    - calendars:
      - <b><tt>delete</tt></b>
      - <b><tt>get</tt></b>
      - <b><tt>insert</tt></b>
      - <b><tt>list</tt></b>
      - <b><tt>patch</tt></b>
      - <b><tt>update</tt></b>
      - <b><tt>calendars/<calendar_id>/clear</tt></b>
      - <b><tt>calendars/<calendar_id>/delete</tt></b>
      - <b><tt>calendars/<calendar_id>/get</tt></b>
      - <b><tt>calendars/<calendar_id>/patch</tt></b>
      - <b><tt>calendars/<calendar_id>/update</tt></b>
    - acl:
      - <b><tt>calendars/<calendar_id>/acl/delete</tt></b>
      - <b><tt>calendars/<calendar_id>/acl/get</tt></b>
      - <b><tt>calendars/<calendar_id>/acl/insert</tt></b>
      - <b><tt>calendars/<calendar_id>/acl/list</tt></b>
      - <b><tt>calendars/<calendar_id>/acl/patch</tt></b>
      - <b><tt>calendars/<calendar_id>/acl/update</tt></b>
    - calendar events:
      - <b><tt>calendars/<calendar_id>/events/delete</tt></b>
      - <b><tt>calendars/<calendar_id>/events/get</tt></b>
      - <b><tt>calendars/<calendar_id>/events/import</tt></b>
      - <b><tt>calendars/<calendar_id>/events/insert</tt></b>
      - <b><tt>calendars/<calendar_id>/events/instances</tt></b>
      - <b><tt>calendars/<calendar_id>/events/list</tt></b>
      - <b><tt>calendars/<calendar_id>/events/move</tt></b>
      - <b><tt>calendars/<calendar_id>/events/patch</tt></b>
      - <b><tt>calendars/<calendar_id>/events/quickAdd</tt></b>
      - <b><tt>calendars/<calendar_id>/events/update</tt></b>

    To use this data provider, you will need a connection that has already executed the OAuth2 authorization code flow
    and acquired a token to communicate with the Google API.

    @section googlecalendardataprovider_factory Google Calendar Data Provider Factory

    The name of the Google calendar data provider factory is <b><tt>gcal</tt></b>.

    @section googlecalendardataprovider_examples Google Calendar Data Provider Examples

    These examples are with \c qdp, the command-line interface to the Data Provider API.

    @par API Example: Retrieve Metadata for All Calendars
    @verbatim qdp gcal-conn/calendarList/list dor
    @endverbatim

    @par API Example: Retrieve Metadata for the Primary Calendar
    @verbatim qdp gcal-conn/calendars/primary/get dor
    @endverbatim

    @par API Example: Update Calendar Description
    @verbatim qdp gcal-conn/calendars/calendar_name/patch dor description="new description"
    @endverbatim

    @par API Example: Retrieve Calendar Event
    @verbatim qdp gcal-conn/calendars/primary/events/get dor id=event_id
    @endverbatim

    @par API Example: Quick Add a Calendar Event
    @verbatim qdp gcal-conn/calendars/primary/events/quickAdd dor text="Lunch at Burger Bar from 12:30-13:30 today"
    @endverbatim

    @par API Example: Update a Calendar Event
    @verbatim qdp gcal-conn/calendars/primary/events/update dor id=event_id,summary="Lunch Today"
    @endverbatim

    @par API Example: Delete a Calendar Event
    @verbatim qdp gcal-conn/calendars/primary/events/delete dor id=event_id
    @endverbatim

    @section googledataprovider_relnotes Release Notes

    @subsection googledataprovider_v2_0 GoogleCalendarDataProvider v2.0
    - split to a separate module
    - refactored to be generated from the Discovery API
    - added support for the data provider action catalog API
      (<a href="https://github.com/qorelanguage/qore/issues/4808">issue 4808</a>)

    @subsection googledataprovider_v1_0 GoogleCalendarDataProvider v1.0
    - initial release of the module
*/

#! Contains all public definitions in the GoogleCalendarDataProvider module
public namespace GoogleCalendarDataProvider {
#! Google calendar application name
public const CalendarAppName = "GoogleCalendar";

#! Discovery API name
public const GoogleDiscoveryCalendarApiName = "calendar";
}

namespace Priv {
#! used in accordance with: https://about.google/brand-resource-center/brand-elements/
const GoogleCalendarLogo = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version=\"1.1\"
   id=\"svg1\"
   width=\"512\"
   height=\"512\"
   viewBox=\"0 0 512 512\"
   sodipodi:docname=\"google-calendar-logo.svg\"
   inkscape:version=\"1.3 (0e150ed6c4, 2023-07-21)\"
   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"
   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"
   xmlns:xlink=\"http://www.w3.org/1999/xlink\"
   xmlns=\"http://www.w3.org/2000/svg\"
   xmlns:svg=\"http://www.w3.org/2000/svg\">
  <defs
     id=\"defs1\" />
  <sodipodi:namedview
     id=\"namedview1\"
     pagecolor=\"#ffffff\"
     bordercolor=\"#000000\"
     borderopacity=\"0.25\"
     inkscape:showpageshadow=\"2\"
     inkscape:pageopacity=\"0.0\"
     inkscape:pagecheckerboard=\"0\"
     inkscape:deskcolor=\"#d1d1d1\"
     inkscape:zoom=\"0.4609375\"
     inkscape:cx=\"254.91525\"
     inkscape:cy=\"256\"
     inkscape:window-width=\"1286\"
     inkscape:window-height=\"787\"
     inkscape:window-x=\"42\"
     inkscape:window-y=\"1\"
     inkscape:window-maximized=\"0\"
     inkscape:current-layer=\"g2\" />
  <g
     inkscape:groupmode=\"layer\"
     inkscape:label=\"Image\"
     id=\"g1\">
    <g
       id=\"g2\">
      <path
         style=\"fill:#fefefe\"
         d=\"M 0,256 V 0 H 256 512 V 256 512 H 256 0 Z M 410.77721,410.72283 459.04669,362.44565 458.77334,220.47283 458.5,78.5 455.89889,72.954369 c -3.71241,-7.914926 -8.1035,-12.437475 -15.71342,-16.183825 L 433.54205,53.5 H 256 78.457945 l -6.643418,3.270544 c -7.609918,3.74635 -12.001011,8.268899 -15.713414,16.183825 L 53.5,78.5 v 178 178 l 2.137328,4.6224 c 4.135472,8.9438 12.380288,16.10639 21.313233,18.51562 3.48665,0.94036 37.372369,1.24276 145.053309,1.29449 L 362.50773,459 Z M 149.24548,256.25 149.5,149.5 256.25,149.24548 363,148.99095 V 255.99548 363 H 255.99548 148.99095 Z\"
         id=\"path9\" />
      <path
         style=\"fill:#f9ba04\"
         d=\"M 363,256.5 V 150 h 48 48 V 256.5 363 h -48 -48 z\"
         id=\"path8\" />
      <path
         style=\"fill:#4184f2\"
         d=\"M 53.230023,220.5 53.5,78.5 56.101113,72.954369 c 3.71232,-7.91475 8.103426,-12.437415 15.713056,-16.183825 L 78.457229,53.5 253.47861,53.476284 C 349.74038,53.46324 413.7625,53.581889 395.75,53.739948 L 363,54.027329 v 47.481811 47.48181 L 256.25,149.24548 149.5,149.5 149,256 148.5,362.5 H 100.73002 52.960046 Z m 405.217537,-104 c -3.8e-4,-18.15 0.13477,-25.71608 0.30034,-16.813512 0.16557,8.902572 0.16588,23.752572 6.9e-4,33.000002 -0.16519,9.24743 -0.30065,1.96351 -0.30103,-16.18649 z M 448.43709,62.75 445.5,59.5 l 3.25,2.937091 c 1.7875,1.6154 3.25,3.0779 3.25,3.25 0,0.772561 -0.82513,0.09236 -3.56291,-2.937091 z\"
         id=\"path7\" />
      <path
         style=\"fill:#63a76b\"
         d=\"m 221.24031,458.25003 140.7403,-0.25695 0.26962,-47.74654 0.26963,-47.74654 0.24007,48.25 L 363,459 221.75,458.75349 80.5,458.50697 Z M 53.449558,397 c 0,-18.975 0.134476,-26.7375 0.298835,-17.25 0.164359,9.4875 0.164359,25.0125 0,34.5 -0.164359,9.4875 -0.298835,1.725 -0.298835,-17.25 z M 386.75,149.25085 c 13.3375,-0.15752 35.1625,-0.15752 48.5,0 13.3375,0.15752 2.425,0.28641 -24.25,0.28641 -26.675,0 -37.5875,-0.12889 -24.25,-0.28641 z\"
         id=\"path6\" />
      <path
         style=\"fill:#e94235\"
         d=\"M 363,410.5 V 363 h 47.74605 47.74606 L 411,410.5 C 384.87934,436.625 363.39362,458 363.25395,458 363.11428,458 363,436.625 363,410.5 Z\"
         id=\"path5\" />
      <path
         style=\"fill:#1866d1\"
         d=\"m 77.25,362.25088 c 13.0625,-0.15789 34.4375,-0.15789 47.5,0 13.0625,0.1579 2.375,0.28709 -23.75,0.28709 -26.125,0 -36.8125,-0.12919 -23.75,-0.28709 z M 363,101.45344 V 53.906874 l 36.25,0.296563 36.25,0.296563 5,2.663602 c 5.99258,3.19237 11.43393,8.705214 14.64398,14.836398 2.33048,4.451223 2.35923,4.892922 2.65258,40.75 L 458.09313,149 H 410.54656 363 Z\"
         id=\"path4\" />
      <path
         style=\"fill:#32a651\"
         d=\"M 149,410.5 V 363 H 255.5 362 V 410.5 458 H 255.5 149 Z\"
         id=\"path3\" />
      <path
         style=\"fill:#177f37\"
         d=\"M 75.376371,456.67392 C 66.209017,453.22865 58.199912,445.08092 55.153244,436.10078 54.369337,433.79019 54,421.54028 54,397.85078 V 363 h 47.5 47.5 v 47.5 47.5 l -35.25,-0.0761 c -24.367895,-0.0526 -36.214302,-0.43848 -38.373629,-1.25 z\"
         id=\"path2\" />
    </g>
  </g>
</svg>";
}