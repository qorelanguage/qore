# -*- mode: qore; indent-tabs-mode: nil -*-
#! Qore ServiceNowRestDataProvider module definition

/*  ServiceNowRestDataProvider.qm Copyright 2020 - 2023 Qore Technologies, s.r.o.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

# minimum required Qore version
%requires qore >= 2.0
# assume local scope for variables, do not use "$" signs
%new-style
# require type definitions everywhere
%require-types
# strict argument handling
%strict-args
# enable all warnings
%enable-all-warnings

%requires(reexport) DataProvider
%requires(reexport) ServiceNowRestClient

module ServiceNowRestDataProvider {
    version = "2.0";
    desc = "user module providing a data provider API for ServiceNow instances through the REST API";
    author = "David Nichols <david@qore.org>";
    url = "http://qore.org";
    license = "MIT";
    init = sub () {
        # register the data provider factory
        DataProvider::registerFactory(new ServiceNowRestDataProviderFactory());

        # register the data provider application
        DataProviderActionCatalog::registerApp(<DataProviderAppInfo>{
            "name": ServiceNowRestDataProvider::AppName,
            "desc": "ServiceNowÂ® cloud APIs; ServiceNow is a trademark of ServiceNow, Inc.",
            "scheme": "snrests",
            "oauth2_auth_code": True,
            # NOTE: the logo is an SVG with "SN" in the middle - not the ServiceNow logo
            "logo": ServiceNowLogo,
            "logo_file_name": "servicenow-logo.svg",
            "logo_mime_type": MimeTypeSvg,
        });

        # register all supported actions
        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/incident",
            "action": "create-incident",
            "short_desc": "Create an incident in ServiceNow",
            "desc": "Create an incident in ServiceNow by creating a record in the `incident` table using "
                "ServiceNow's REST API",
            "action_code": DPAT_CREATE,
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/incident",
            "action": "find-single-incident",
            "short_desc": "Find a specific incident in ServiceNow",
            "desc": "Find a specific record in the `incident` table using ServiceNow's REST API",
            "action_code": DPAT_FIND_SINGLE,
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/incident",
            "action": "find-incidents",
            "short_desc": "Find incident records in ServiceNow",
            "desc": "Find records in the `incident` table using ServiceNow's REST API",
            "action_code": DPAT_FIND,
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/incident",
            "action": "update-incidents",
            "short_desc": "Update incident records in ServiceNow",
            "desc": "Update records in the `incident` table using ServiceNow's REST API",
            "action_code": DPAT_UPDATE,
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/incident",
            "action": "delete-incidents",
            "short_desc": "Delete incident records in ServiceNow",
            "desc": "Delete records in the `incident` table using ServiceNow's REST API",
            "action_code": DPAT_DELETE,
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/{table}",
            "action": "create-record",
            "short_desc": "Create a record in a ServiceNow table",
            "desc": "Create a record in a ServiceNow table using ServiceNow's REST API",
            "action_code": DPAT_CREATE,
            "path_vars": {
                "table": "The name of the ServiceNow table, ex: `incident`",
            },
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/{table}",
            "action": "find-single-record",
            "short_desc": "Find a specific incident in ServiceNow",
            "desc": "Find a specific record in a ServiceNow table using ServiceNow's REST API",
            "action_code": DPAT_FIND_SINGLE,
            "path_vars": {
                "table": "The name of the ServiceNow table, ex: `incident`",
            },
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/{table}",
            "action": "find-records",
            "short_desc": "Find incident records in ServiceNow",
            "desc": "Find records in a ServiceNow table using ServiceNow's REST API",
            "action_code": DPAT_FIND,
            "path_vars": {
                "table": "The name of the ServiceNow table, ex: `incident`",
            },
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/{table}",
            "action": "update-records",
            "short_desc": "Update incident records in ServiceNow",
            "desc": "Update records in a ServiceNow table using ServiceNow's REST API",
            "action_code": DPAT_UPDATE,
            "path_vars": {
                "table": "The name of the ServiceNow table, ex: `incident`",
            },
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": ServiceNowRestDataProvider::AppName,
            "path": "/tables/{table}",
            "action": "delete-records",
            "short_desc": "Delete records in ServiceNow",
            "desc": "Delete records in a ServiceNow table using ServiceNow's REST API",
            "action_code": DPAT_DELETE,
            "path_vars": {
                "table": "The name of the ServiceNow table, ex: `incident`",
            },
        });
    };
}

/** @mainpage ServiceNowRestDataProvider Module

    @tableofcontents

    @section servicenowrestdataproviderintro Introduction to the ServiceNowRestDataProvider Module

    The %ServiceNowRestDataProvider module provides a @ref dataproviderintro "data provider" API for ServiceNow REST
    services.  The @ref ServiceNowRestDataProvider::ServiceNowRestDataProvider "ServiceNowRestDataProvider" class
    allows for introspecting a ServiceNow application instance, while the
    @ref ServiceNowRestDataProvider::ServiceNowTableDataProvider "ServiceNowTableDataProvider" class
    supports the @ref dataproviderintro "data provider" record-based API for querying and manipulating table data in
    the application.

    ServiceNow instances can be introspected with the following format:
    - REST operation path: <tt><i>uri_path</i></tt>
      - ex: <tt><b>tables/incident</b></tt>
      - results in a
        @ref ServiceNowRestDataProvider::ServiceNowTableDataProvider "ServiceNowTableDataProvider" object
        where record operations supported on the object can be executed

    The following classes are provided by this module:
    - @ref ServiceNowRestDataProvider::ServiceNowRestDataProvider "ServiceNowRestDataProvider"
    - @ref ServiceNowRestDataProvider::ServiceNowRestDataProviderFactory "ServiceNowRestDataProviderFactory"
    - @ref ServiceNowRestDataProvider::ServiceNowTablesDataProvider "ServiceNowTablesDataProvider"
    - @ref ServiceNowRestDataProvider::ServiceNowTableDataProvider "ServiceNowTableDataProvider"
    - @ref ServiceNowRestDataProvider::ServiceNowRestRecordIterator "ServiceNowRestRecordIterator"

    @subsection servicenowrestdataprovider_v2_0 ServiceNowRestDataProvider v2.0
    - added support for the data provider action catalog API
      (<a href="https://github.com/qorelanguage/qore/issues/4808">issue 4808</a>)

    @subsection servicenowrestdataprovider_v1_2_1 ServiceNowRestDataProvider v1.2.1
    - fixed operator handling in searches
      (<a href="https://github.com/qorelanguage/qore/issues/4759">issue 4759</a>)

    @subsection servicenowrestdataprovider_v1_2 ServiceNowRestDataProvider v1.2
    - updated to use new generic expression support for searches
      (<a href="https://github.com/qorelanguage/qore/issues/4538">issue 4538</a>)

    @subsection servicenowrestdataprovider_v1_1_1 ServiceNowRestDataProvider v1.1.1
    - fixed bugs handling the \c orderby, \c orderbydesc, and \c groupby search options
      (<a href="https://github.com/qorelanguage/qore/issues/4536">issue 4536</a>)

    @subsection servicenowrestdataprovider_v1_1 ServiceNowRestDataProvider v1.1
    - updated to no longer require OAuth2 login params
      (<a href="https://github.com/qorelanguage/qore/issues/4295">issue 4295</a>)

    @subsection servicenowrestdataprovider_v1_0_1 ServiceNowRestDataProvider v1.0.1
    - fixed a type error in DataProvider API support
      (<a href="https://github.com/qorelanguage/qore/issues/4104">issue 4104</a>)

    @subsection servicenowrestdataprovider_v1_0 ServiceNowRestDataProvider v1.0
    - initial release of the module
*/

#! contains all public definitions in the ServiceNowRestDataProvider module
public namespace ServiceNowRestDataProvider {
}

namespace Priv {
# SVG with "SN" in the middle
const ServiceNowLogo = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>
<svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" version=\"1.1\" xml:space=\"preserve\"
  style=\"clip-rule:evenodd;fill-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\" id=\"svg3\"
  sodipodi:docname=\"SN.svg\" inkscape:version=\"1.3 (0e150ed, 2023-07-21)\"
  xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"
  xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" xmlns=\"http://www.w3.org/2000/svg\"
  xmlns:svg=\"http://www.w3.org/2000/svg\">
  <defs id=\"defs3\" /><sodipodi:namedview id=\"namedview3\" pagecolor=\"#ffffff\" bordercolor=\"#000000\" borderopacity=\"0.25\"
    inkscape:showpageshadow=\"2\" inkscape:pageopacity=\"0.0\" inkscape:pagecheckerboard=\"0\" inkscape:deskcolor=\"#d1d1d1\"
    inkscape:zoom=\"1.0371703\" inkscape:cx=\"417\" inkscape:cy=\"417\" inkscape:window-width=\"1392\" inkscape:window-height=\"1212\"
    inkscape:window-x=\"72\" inkscape:window-y=\"25\" inkscape:window-maximized=\"0\" inkscape:current-layer=\"svg3\" />
  <g transform=\"translate(-327.554,-198.743)\" id=\"g3\">
    <g transform=\"matrix(150,0,0,150,326.404,358.732)\" id=\"g1\">
      <path d=\"m 0.534,-0.729 v 0.101 C 0.517,-0.643 0.499,-0.656 0.482,-0.667 0.464,-0.678 0.446,-0.688 0.429,-0.695 0.389,-0.714 0.348,-0.723 0.307,-0.723 c -0.052,0 -0.095,0.013 -0.129,0.039 -0.035,0.027 -0.052,0.058 -0.052,0.095 0,0.053 0.039,0.093 0.118,0.12 0.037,0.013 0.073,0.025 0.11,0.036 0.036,0.012 0.073,0.024 0.11,0.036 0.079,0.038 0.119,0.095 0.119,0.17 0,0.073 -0.028,0.132 -0.085,0.177 C 0.444,-0.008 0.377,0.013 0.297,0.013 0.244,0.013 0.192,0.003 0.143,-0.018 0.114,-0.029 0.08,-0.048 0.041,-0.074 v -0.102 c 0.051,0.046 0.103,0.078 0.156,0.097 0.017,0.007 0.034,0.011 0.051,0.014 0.017,0.003 0.033,0.004 0.05,0.004 0.053,0 0.098,-0.013 0.135,-0.04 0.041,-0.029 0.061,-0.068 0.061,-0.115 0,-0.057 -0.039,-0.101 -0.116,-0.131 C 0.341,-0.358 0.304,-0.37 0.268,-0.382 0.232,-0.394 0.196,-0.406 0.16,-0.417 0.082,-0.453 0.043,-0.508 0.043,-0.583 c 0,-0.063 0.025,-0.114 0.074,-0.153 0.051,-0.041 0.114,-0.061 0.19,-0.061 0.047,0 0.093,0.009 0.14,0.026 0.024,0.008 0.053,0.022 0.087,0.042 z\"
        style=\"fill-rule:nonzero\" id=\"path1\" />
    </g>
    <g transform=\"matrix(150,0,0,150,421.204,358.732)\" id=\"g2\">
      <path d=\"M 0.05,0 V -0.784 H 0.122 L 0.604,-0.12 V -0.784 H 0.676 V 0 H 0.604 L 0.122,-0.663 V 0 Z\"
        style=\"fill-rule:nonzero\" id=\"path2\" />
    </g>
  </g>
</svg>";
}