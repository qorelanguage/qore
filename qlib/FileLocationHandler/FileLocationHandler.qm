# -*- mode: qore; indent-tabs-mode: nil -*-
#! @file FileLocationHandler.qm module for returning file data from a URL-like location string
/*  FileLocationHandler.qm Copyright 2021 - 2022 Qore Technologies, s.r.o.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

# minimum required Qore version
%requires qore >= 1.13
# assume local scope for variables, do not use "$" signs
%new-style
# require type definitions everywhere
%require-types
# strict argument handling
%strict-args
# enable all warnings
%enable-all-warnings

%requires Util

module FileLocationHandler {
    version = "2.2";
    desc = "user module for reading and writing file data based on URL-like location strings";
    author = "David Nichols <david@qore.org>";
    url = "http://qore.org";
    license = "MIT";
    init = sub () {
        # setup default handlers
        FileLocationHandler::init();
    };
}

/** @mainpage FileLocationHandler Module

    @tableofcontents

    @section filelocationhandlerintro Introduction to the FileLocationHandler Module

    The %FileLocationHandler module provides an API for returning file data based on a URL-like location string.

    To retrieve file data, call one of:
    - @ref FileLocationHandler::FileLocationHandler::getTextFileFromLocation() "FileLocationHandler::getTextFileFromLocation()"
    - @ref FileLocationHandler::FileLocationHandler::getBinaryFileFromLocation() "FileLocationHandler::getBinaryFileFromLocation()"
    - @ref FileLocationHandler::FileLocationHandler::getStreamReaderFromLocation() "FileLocationHandler::getStreamReaderFromLocation()"
    - @ref FileLocationHandler::FileLocationHandler::getBinaryStreamFromLocation() "FileLocationHandler::getBinaryStreamFromLocation()"

    To write file data, call one of:
    - @ref FileLocationHandler::FileLocationHandler::writeFileToLocation() "FileLocationHandler::writeFileToLocation()"
    - @ref FileLocationHandler::FileLocationHandler::getOutputStreamForLocation() "FileLocationHandler::getOutputStreamForLocation()"

    To register a location handler based on a scheme, call one of:
    - @ref FileLocationHandler::FileLocationHandler::registerHandler() "FileLocationHandler::registerHandler()"
    - @ref FileLocationHandler::FileLocationHandler::tryRegisterHandler() "FileLocationHandler::tryRegisterHandler()"

    This module provides the following classes:
    - @ref FileLocationHandler::AbstractFileLocationHandler "AbstractFileLocationHandler": the abstract API class
    - @ref FileLocationHandler::FileLocationHandler "FileLocationHandler": the main API class
    - @ref FileLocationHandler::FileLocationHandlerData "FileLocationHandlerData": class handling \c "data://"
      locations (immedidate data in the location URL)
    - @ref FileLocationHandler::FileLocationHandlerFile "FileLocationHandlerFile": class handling \c "file://"
      locations (the default if no scheme is present in the location string)
    - @ref FileLocationHandler::FileLocationHandlerFtp "FileLocationHandlerFtp": class handling \c "ftp://" and
      \c "ftps://" locations
    - @ref FileLocationHandler::FileLocationHandlerHttp "FileLocationHandlerHttp": class handling \c "http://" and
      \c "https://" locations
    - @ref FileLocationHandler::FileLocationHandlerRest "FileLocationHandlerRest": class handling \c "rest://" and
      \c "rests://" locations
    - @ref FileLocationHandler::FileLocationHandlerSftp "FileLocationHandlerSftp": class handling \c "sftp://"
      locations
    - @ref FileLocationHandler::OutputStreamWrapper "OutputStreamWrapper": output stream wrapper class for handling
      background I/O operations

    @section filelocationhandler_env FileLocationHandler Environment variable

    The \c QORE_FILE_LOCATION_HANDLERS environment variable will be read to initialize modules that provide support
    for custom URL schemes; multiple modules can be separated by the OS-specific path separator (\c : on Linux / UNIX,
    \c ; on Windows).

    Each module listed in this environment variable should call either
    @ref FileLocationHandler::FileLocationHandler::registerHandler() "FileLocationHandler::registerHandler()" or
    @ref FileLocationHandler::FileLocationHandler::tryRegisterHandler() "FileLocationHandler::tryRegisterHandler()" in
    its \c init code to register a handler for a new scheme.

    @section filelocationhandler_relnotes Release Notes

    @subsection filelocationhandler_v2_2 FileLocationHandler v2.2
    - added support for \c rest:// and \c rests:// locations
      (<a href="https://github.com/qorelanguage/qore/issues/4669">issue 4669</a>)
    - added support for runtime extensibility from environment variables
      (<a href="https://github.com/qorelanguage/qore/issues/4667">issue 4667</a>)

    @subsection filelocationhandler_v2_1 FileLocationHandler v2.1
    - added support for immediate <tt>data://</tt> locations
      (<a href="https://github.com/qorelanguage/qore/issues/4626">issue 4626</a>)

    @subsection filelocationhandler_v2_0 FileLocationHandler v2.0
    - updated for read/write operations and added streaming APIs
      (<a href="https://github.com/qorelanguage/qore/issues/4424">issue 4424</a>)

    @subsection filelocationhandler_v1_0 FileLocationHandler v1.0
    - initial release of the module
*/

#! Contains all public definitions in the FileLocationHandler module
public namespace FileLocationHandler {
}
