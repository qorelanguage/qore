# -*- mode: qore; indent-tabs-mode: nil -*-
#! Qore MewsRestDataProvider module definition

/*  MewsRestDataProvider.qm Copyright 2019 - 2023 Qore Technologies, s.r.o.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

# minimum required Qore version
%requires qore >= 2.0
# assume local scope for variables, do not use "$" signs
%new-style
# require type definitions everywhere
%require-types
# strict argument handling
%strict-args
# enable all warnings
%enable-all-warnings

%requires(reexport) ConnectionProvider
%requires(reexport) DataProvider
%requires(reexport) MewsRestClient
%requires SwaggerDataProvider

module MewsRestDataProvider {
    version = "1.0";
    desc = "User module providing a data provider API for Mews instances";
    author = "David Nichols <david@qore.org>";
    url = "http://qore.org";
    license = "MIT";
    init = sub () {
        # register the data provider factory
        DataProvider::registerFactory(new MewsRestDataProviderFactory());

        # register the data provider application
        DataProviderActionCatalog::registerApp(<DataProviderAppInfo>{
            "name": MewsRestDataProvider::AppName,
            "display_name": "Mews Server",
            "short_desc": "Mews server",
            "desc": "Mews server",
            "scheme": "mewsrest",
            "logo": MewsLogoWhite,
            "logo_file_name": "mews-logo.svg",
            "logo_mime_type": MimeTypeSvg,
        });

        # register all supported actions
        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": MewsRestDataProvider::AppName,
            "path": "/tables/orderitems",
            "action": "get-order-items",
            "display_name": "Retrieve Order Items",
            "short_desc": "Retrieve order item information from Mews",
            "desc": "Retrieve order item information from Mews",
            "action_code": DPAT_FIND,
            "convenience_options": {
                "ClosedUtcStart": <ActionOptionInfo>{
                    "display_name": "Closed Date Start",
                    "short_desc": "The earliest date and time of the closed date",
                    "desc": "The earliest date and time of the closed date; i.e. `ClosedUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                    "preselected": True,
                },
                "ClosedUtcEnd": <ActionOptionInfo>{
                    "display_name": "Closed Date End",
                    "short_desc": "The upper limit of the closed date (and time) range",
                    "desc": "The upper limit of the closed date (and time) range; i.e. `ClosedUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                    "preselected": True,
                },
            },
            "advanced_options": {
                "CreatedUtcStart": <ActionOptionInfo>{
                    "display_name": "Created Date Start",
                    "short_desc": "The earliest date and time of the updated date",
                    "desc": "The earliest date and time of the updated date; i.e. `CreatedUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "CreatedUtcEnd": <ActionOptionInfo>{
                    "display_name": "Updated Date End",
                    "short_desc": "The upper limit of the created date (and time) range",
                    "desc": "The upper limit of the created date (and time) range; i.e. `CreatedUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "UpdatedUtcStart": <ActionOptionInfo>{
                    "display_name": "Updated Date Start",
                    "short_desc": "The earliest date and time of the updated date",
                    "desc": "The earliest date and time of the updated date; i.e. `UpdatedUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "UpdatedUtcEnd": <ActionOptionInfo>{
                    "display_name": "Updated Date End",
                    "short_desc": "The upper limit of the updated date (and time) range",
                    "desc": "The upper limit of the updated date (and time) range; i.e. `UpdatedUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "ChargedUtcStart": <ActionOptionInfo>{
                    "display_name": "Charged Date Start",
                    "short_desc": "The earliest date and time of the charged date",
                    "desc": "The earliest date and time of the charged date; i.e. `ChargedUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "ChargedUtcEnd": <ActionOptionInfo>{
                    "display_name": "Charged Date End",
                    "short_desc": "The upper limit of the charged date (and time) range",
                    "desc": "The upper limit of the charged date (and time) range; i.e. `ChargedUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "ConsumedUtcStart": <ActionOptionInfo>{
                    "display_name": "Consumed Date Start",
                    "short_desc": "The earliest date and time of the consumed date",
                    "desc": "The earliest date and time of the consumed date; i.e. `ConsumedUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "ConsumedUtcEnd": <ActionOptionInfo>{
                    "display_name": "Updated Date End",
                    "short_desc": "The upper limit of the consumed date (and time) range",
                    "desc": "The upper limit of the consumed date (and time) range; i.e. `UpdatedUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "CanceledUtcStart": <ActionOptionInfo>{
                    "display_name": "Canceled Date Start",
                    "short_desc": "The earliest date and time of the canceled date",
                    "desc": "The earliest date and time of the canceled date; i.e. `CanceledUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "CanceledUtcEnd": <ActionOptionInfo>{
                    "display_name": "Canceled Date End",
                    "short_desc": "The upper limit of the canceled date (and time) range",
                    "desc": "The upper limit of the canceled date (and time) range; i.e. `CanceledUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "EnterpriseId": <ActionOptionInfo>{
                    "display_name": "Enterprise ID",
                    "short_desc": "The enterprise ID(s) for the search",
                    "desc": "The enterprise ID(s) for the search",
                    "type": "list",
                    "example_value": ("851df8c8-90f2-4c4a-8e01-a4fc46b25178",),
                },
                "OrderItemId": <ActionOptionInfo>{
                    "display_name": "Order Item ID",
                    "short_desc": "The order item ID(s) for the search",
                    "desc": "The order item ID(s) for the search",
                    "type": "list",
                    "example_value": ("62f15146-9597-4169-9d05-b0b5011f0b1d",),
                },
                "ServiceOrderId": <ActionOptionInfo>{
                    "display_name": "Service Order ID",
                    "short_desc": "The service order ID(s) for the search",
                    "desc": "The service order ID(s) for the search",
                    "type": "list",
                    "example_value": ("44fa5fa0-2f98-46d8-9bd8-b0b5011f0a5f",),
                },
                "ServiceId": <ActionOptionInfo>{
                    "display_name": "Service ID",
                    "short_desc": "The service ID(s) for the search",
                    "desc": "The service ID(s) for the search",
                    "type": "list",
                    "example_value": ("f38cac87-196b-4a5a-9c45-b046006ba01b",),
                },
                "BillId": <ActionOptionInfo>{
                    "display_name": "Bill ID",
                    "short_desc": "The bill ID(s) for the search",
                    "desc": "The bill ID(s) for the search",
                    "type": "list",
                    "example_value": ("dfd04d00-02b1-4843-ab7e-b0b5012055c1",),
                },
                "AccountingState": <ActionOptionInfo>{
                    "display_name": "Accounting State",
                    "short_desc": "The accounting state(s) for the search",
                    "desc": "The accounting state(s) for the search; `Open`, `Closed`, `Inactive`, or `Canceled`",
                    "type": "list",
                    "example_value": ("Closed",),
                },
                "Type": <ActionOptionInfo>{
                    "display_name": "Order Item Type",
                    "short_desc": "The order item type(s) for the search",
                    "desc": "The order item type(s) for the search",
                    "type": "list",
                    "example_value": ("Deposit",),
                },
                "Currency": <ActionOptionInfo>{
                    "display_name": "Currency",
                    "short_desc": "The currency code that amounts should be reported in",
                    "desc": "The currency code that amounts should be reported in",
                    "type": "string",
                    "example_value": "EUR",
                },
            },
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": MewsRestDataProvider::AppName,
            "path": "/tables/payments",
            "action": "get-payments",
            "display_name": "Retrieve Payment Information",
            "short_desc": "Retrieve payment information from Mews",
            "desc": "Retrieve payment information from Mews",
            "action_code": DPAT_FIND,
            "convenience_options": {
                "ClosedUtcStart": <ActionOptionInfo>{
                    "display_name": "Closed Date Start",
                    "short_desc": "The earliest date and time of the closed date",
                    "desc": "The earliest date and time of the closed date; i.e. `ClosedUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                    "preselected": True,
                },
                "ClosedUtcEnd": <ActionOptionInfo>{
                    "display_name": "Closed Date End",
                    "short_desc": "The upper limit of the closed date (and time) range",
                    "desc": "The upper limit of the closed date (and time) range; i.e. `ClosedUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                    "preselected": True,
                },
            },
            "advanced_options": {
                "CreatedUtcStart": <ActionOptionInfo>{
                    "display_name": "Created Date Start",
                    "short_desc": "The earliest date and time of the updated date",
                    "desc": "The earliest date and time of the updated date; i.e. `CreatedUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "CreatedUtcEnd": <ActionOptionInfo>{
                    "display_name": "Updated Date End",
                    "short_desc": "The upper limit of the created date (and time) range",
                    "desc": "The upper limit of the created date (and time) range; i.e. `CreatedUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "UpdatedUtcStart": <ActionOptionInfo>{
                    "display_name": "Updated Date Start",
                    "short_desc": "The earliest date and time of the updated date",
                    "desc": "The earliest date and time of the updated date; i.e. `UpdatedUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "UpdatedUtcEnd": <ActionOptionInfo>{
                    "display_name": "Updated Date End",
                    "short_desc": "The upper limit of the updated date (and time) range",
                    "desc": "The upper limit of the updated date (and time) range; i.e. `UpdatedUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "ChargedUtcStart": <ActionOptionInfo>{
                    "display_name": "Charged Date Start",
                    "short_desc": "The earliest date and time of the charged date",
                    "desc": "The earliest date and time of the charged date; i.e. `ChargedUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "ChargedUtcEnd": <ActionOptionInfo>{
                    "display_name": "Charged Date End",
                    "short_desc": "The upper limit of the charged date (and time) range",
                    "desc": "The upper limit of the charged date (and time) range; i.e. `ChargedUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "SettlementUtcStart": <ActionOptionInfo>{
                    "display_name": "Settlement Date Start",
                    "short_desc": "The earliest date and time of the settlement date",
                    "desc": "The earliest date and time of the settlement date; i.e. `SettlementUtc` >= <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "SettlementUtcEnd": <ActionOptionInfo>{
                    "display_name": "Settlement Date End",
                    "short_desc": "The upper limit of the settlement date (and time) range",
                    "desc": "The upper limit of the settlement date (and time) range; i.e. `SettlementUtc` < <this date>",
                    "type": "date",
                    "example_value": now(),
                },
                "EnterpriseId": <ActionOptionInfo>{
                    "display_name": "Enterprise ID",
                    "short_desc": "The enterprise ID(s) for the search",
                    "desc": "The enterprise ID(s) for the search",
                    "type": "list",
                    "example_value": ("851df8c8-90f2-4c4a-8e01-a4fc46b25178",),
                },
                "PaymentId": <ActionOptionInfo>{
                    "display_name": "Payment ID",
                    "short_desc": "One or more payment ID(s) for the search",
                    "desc": "One or more payment ID(s) for the search",
                    "type": "list",
                    "example_value": ("97972551-daf6-4024-9992-b0b501206c37",),
                },
                "BillId": <ActionOptionInfo>{
                    "display_name": "Bill ID",
                    "short_desc": "The bill ID(s) for the search",
                    "desc": "The bill ID(s) for the search",
                    "type": "list",
                    "example_value": ("dfd04d00-02b1-4843-ab7e-b0b5012055c1",),
                },
                "AccountingState": <ActionOptionInfo>{
                    "display_name": "Accounting State",
                    "short_desc": "The accounting state(s) for the search",
                    "desc": "The accounting state(s) for the search; `Open`, `Closed`, `Inactive`, or `Canceled`",
                    "type": "list",
                    "example_value": ("Closed",),
                },
                "State": <ActionOptionInfo>{
                    "display_name": "Payment State",
                    "short_desc": "The payment state(s) for the search",
                    "desc": "The payment state(s) for the search; `Charged`, `Canceled`, `Pending`, `Failed`, or "
                        "`Verifying`",
                    "type": "list",
                    "example_value": ("Charged",),
                },
                "Currency": <ActionOptionInfo>{
                    "display_name": "Currency",
                    "short_desc": "The currency code that amounts should be reported in",
                    "desc": "The currency code that amounts should be reported in",
                    "type": "string",
                    "example_value": "EUR",
                },
                "Type": <ActionOptionInfo>{
                    "display_name": "Payment Type",
                    "short_desc": "The payment type(s) for the search",
                    "desc": "The payment type(s) for the search",
                    "type": "list",
                    "example_value": ("CreditCardPayment",),
                },
            },
        });

        DataProviderActionCatalog::registerAction(<DataProviderActionInfo>{
            "app": MewsRestDataProvider::AppName,
            "path": "/tables/customers",
            "action": "get-customers",
            "display_name": "Retrieve Customer Information",
            "short_desc": "Retrieve customer information from Mews",
            "desc": "Retrieve customer information from Mews",
            "action_code": DPAT_FIND,
            "convenience_options": {
                "CustomerId": <ActionOptionInfo>{
                    "display_name": "Customer ID",
                    "short_desc": "The customer ID(s) to find",
                    "desc": "The customer ID(s) (UUID(s)) to find",
                    "type": "list",
                    "example_value": ("690c3038-0dcc-469c-8143-fff4642c99e5",),
                    "preselected": True,
                },
            },
            "advanced_options": {
                "ChainId": <ActionOptionInfo>{
                    "display_name": "Chain ID",
                    "short_desc": "Limit the search to the given chain ID(s)",
                    "desc": "Limit the search to the given chain ID(s)",
                    "type": "list",
                    "example_value": ("8ddea57b-6a5c-4eec-8c4c-24467dce118e",),
                },
                "Email": <ActionOptionInfo>{
                    "display_name": "EMail Address",
                    "short_desc": "Search for customers with the given email address(es)",
                    "desc": "Search for customers with the given email address(es)",
                    "type": "list",
                    "example_value": ("smith@gmail.com",),
                },
                "FirstName": <ActionOptionInfo>{
                    "display_name": "First Name",
                    "short_desc": "Search for customers with the given first name(s)",
                    "desc": "Search for customers with the given first name(s)",
                    "type": "list",
                    "example_value": ("John",),
                },
                "LastName": <ActionOptionInfo>{
                    "display_name": "Last Name",
                    "short_desc": "Search for customers with the given last name(s)",
                    "desc": "Search for customers with the given last name(s)",
                    "type": "list",
                    "example_value": ("Smith",),
                },
                "LoyaltyCode": <ActionOptionInfo>{
                    "display_name": "Loyalty Code",
                    "short_desc": "Search for customers with the given loyalty code(s)",
                    "desc": "Search for customers with the given loyalty code(s)",
                    "type": "list",
                },
                "ActivityState": <ActionOptionInfo>{
                    "display_name": "Activity State",
                    "short_desc": "Search for customers with the given activity state(s)",
                    "desc": "Search for customers with the given activity state(s) (`Active` or `Deleted`)",
                    "type": "list",
                    "example_value": ("Active",),
                },
            },
        });
    };
}

/** @mainpage MewsRestDataProvider Module

    @tableofcontents

    @section mewsrestdataproviderintro Introduction to the MewsRestDataProvider Module

    @htmlonly
    <div class="image">
      <img src="elastic-logo.svg" alt="MewsRest Logo" style="width:40%;">
    </div>
    @endhtmlonly

    The %MewsRestDataProvider module provides a @ref dataproviderintro "data provider" API for MewsRest
    instances and data.  It provides introspection into the configuration and document attributes as well as APIs and
    a record-based data provider to use MewsRest indices as DB table-like objects as well.

    This data provider provides MewsRest API access to:
    - documents: <b><tt>document/{@ref MewsRestDataProvider::MewsRestDocumentCreateDataProvider "create",
      @ref MewsRestDataProvider::MewsRestDocumentReadDataProvider "read",
      @ref MewsRestDataProvider::MewsRestDocumentUpdateDataProvider "update",
      @ref MewsRestDataProvider::MewsRestDocumentDeleteDataProvider "delete"}</tt></b>
    - indexes: <b><tt>index/{@ref MewsRestDataProvider::MewsRestIndexCreateDataProvider "create",
      @ref MewsRestDataProvider::MewsRestIndexReadDataProvider "read",
      @ref MewsRestDataProvider::MewsRestIndexReadAllDataProvider "read-all",
      @ref MewsRestDataProvider::MewsRestIndexDeleteDataProvider "delete",
      @ref MewsRestDataProvider::MewsRestIndexSearchDataProvider "search"}</tt></b>
    - pipelines: <b><tt>pipeline/{@ref MewsRestDataProvider::MewsRestPipelineCreateDataProvider "create",
      @ref MewsRestDataProvider::MewsRestPipelineReadDataProvider "read",
      @ref MewsRestDataProvider::MewsRestPipelineReadAllDataProvider "read-all",
      @ref MewsRestDataProvider::MewsRestPipelineUpdateDataProvider "update",
      @ref MewsRestDataProvider::MewsRestPipelineDeleteDataProvider "delete"}</tt></b>

    Furthermore it provides a record interface to MewsRest indexes supporting record creating, searching,
    updating, and deleting documents (where an MewsRest document is treated as a record) through the following
    path:
    - <b><tt>indexes/</tt><i>@ref MewsRestDataProvider::MewsRestIndexTableDataProvider "index_name"</i></b>

    These data provides represent a single index with a record-like interface; each document (record) will be returned
    with read-only \c _id and \c _score fields as well.  Searches are performed with \c match; for flexible search
    criteria, use the API-driven search
    (@ref MewsRestDataProvider::MewsRestIndexSearchDataProvider "MewsRestIndexSearchDataProvider")

    In this way MewsRest can be used for easy data integration and searches as well as for the manipulation of
    document content and pipelines from the Data Provider API.

    @section mewsrestdataprovider_factory MewsRest Data Provider Factory

    The name of the MewsRest data provider factory is <b><tt>mewsrest</tt></b>.

    @section mewsrestdataprovider_examples MewsRest Data Provider Examples

    These examples are with \c qdp, the command-line interface to the Data Provider API.

    @par API Example: List All Pipelines
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/pipeline/read-all'
    @endverbatim

    @par API Example: Create a Pipeline
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/pipeline/create' \
      pipeline=my-pipeline,description="my pipeline",processors='{html_strip={field=content}}'
    @endverbatim

    @par API Example: Delete a Pipeline
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/pipeline/delete' pipeline=my-pipeline
    @endverbatim

    @par API Example: List All Indices
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/index/read-all'
    @endverbatim

    @par API Example: Create an Index
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/index/create' \
      index=my-index,mappings={properties={content={type=text}}}'
    @endverbatim

    @par API Example: Delete an Index
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/index/delete' index=my-index
    @endverbatim

    @par API Example: Search an Index
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/index/search' \
      index=my-index,'query={match={content=target-string}}'
    @endverbatim

    @par API Example: Create a Document / Ingest Content
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/document/create' \
      index=my-index,pipeline=my-pipeline,content="<h2>my HTML content</h2>",refresh=true
    @endverbatim

    @par API Example: Delete a Document
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/document/delete' \
      index=my-index,id=oE1jYokB_lAyoyNWRDP9
    @endverbatim

    @par Record-Based Example: Search an Index
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/indexes/my-index' \
      content=target-string
    @endverbatim

    @par Record-Based Example: Create a Document / Ingest Content
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/indexes/my-index' create \
      content="<h2>my HTML content</h2>" pipeline=my-pipeline,refresh=true
    @endverbatim

    @par Record-Based Example: Delete a Document
    @verbatim qdp 'mewsrest{url=https://elastic:password@my-server.local:9200}/indexes/my-index' delete \
      _id=oE1jYokB_lAyoyNWRDP9
    @endverbatim

    @section mewsrestdataprovider_relnotes Release Notes

    @subsection mewsrestdataprovider_v1_1 MewsRestDataProvider v1.1
    - added support for the data provider action catalog API
      (<a href="https://github.com/qorelanguage/qore/issues/4808">issue 4808</a>)

    @subsection mewsrestdataprovider_v1_0 MewsRestDataProvider v1.0
    - initial release of the module
*/

#! Contains all public definitions in the MewsRestDataProvider module
public namespace MewsRestDataProvider {
}

public namespace Priv {
public const MewsLogoWhite = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 901.62 113.84\"><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\">"
    "<path fill=\"#ffffff\" d=\"M901,69.73c-3.16-20.93-28.21-22.16-44.79-23,0,0-68.41-1.85-75.63-2.17-6.35-.27-13.73-1.5-14.46-8.59-.75-7.42,5.94-10.86,12-12.15,12.16-2.57,24.3-2.79,36.35-2.79,26.48,0,50.85,2.91,76.58,7.61L893.86,8l0-.15C874.47,4.27,847.63,0,819,0a289.37,289.37,0,0,0-37.49,2.27c-13.54,1.78-28.37,4.89-35.65,14.42-6.18,8.1-6.81,21.78-3.07,31.11,6.44,16.05,29.23,16.67,43.44,17.31,0,0,68.82,2,76.11,2.29,6.35.28,13.74,1.55,14.46,8.85.65,6.53-3.7,11.25-12.68,13.12-11.74,2.45-24.13,2.78-36.17,2.78-29.26,0-55.1-3.06-84.81-7.67l-2.43,20.85a433.24,433.24,0,0,0,82.77,8.51h.41c12.61,0,25.34,0,37.86-1.8,11-1.59,22.61-4,31.3-11.57S902.58,80.19,901,69.73Z\"/>"
    "<path fill=\"#ffffff\" d=\"M97.48,85.81,29.06.77H0V113.12H25.7V35.23l57,70.79c8,10,21.58,10,29.66,0l56.95-70.79v77.89H195V.77H165.9Z\"/>"
    "<polygon fill=\"#ffffff\" points=\"409.96 0.77 260.51 0.77 260.51 113.12 411.21 113.12 414.99 90.4 286.21 90.4 286.21 68.31 404.86 68.31 404.86 45.58 286.21 45.58 286.21 23.49 409.96 23.49 409.96 0.77\"/>"
    "<path fill=\"#ffffff\" d=\"M658,113.09,704.82.77H678.29l-35.88,86L600.13,11a21.31,21.31,0,0,0-36.94,0L520.9,86.74,485,.77H458.5l46.87,112.32h27.27l49-88.62,49,88.62Z\"/></g></g></svg>";
const MewsLogoBlack = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 901.62 113.84\"><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path d=\"M901,69.73c-3.16-20.93-28.21-22.16-44.79-23,0,0-68.41-1.85-75.63-2.17-6.35-.27-13.73-1.5-14.46-8.59-.75-7.42,5.94-10.86,12-12.15,12.16-2.57,24.3-2.79,36.35-2.79,26.48,0,50.85,2.91,76.58,7.61L893.86,8l0-.15C874.47,4.27,847.63,0,819,0a289.37,289.37,0,0,0-37.49,2.27c-13.54,1.78-28.37,4.89-35.65,14.42-6.18,8.1-6.81,21.78-3.07,31.11,6.44,16.05,29.23,16.67,43.44,17.31,0,0,68.82,2,76.11,2.29,6.35.28,13.74,1.55,14.46,8.85.65,6.53-3.7,11.25-12.68,13.12-11.74,2.45-24.13,2.78-36.17,2.78-29.26,0-55.1-3.06-84.81-7.67l-2.43,20.85a433.24,433.24,0,0,0,82.77,8.51h.41c12.61,0,25.34,0,37.86-1.8,11-1.59,22.61-4,31.3-11.57S902.58,80.19,901,69.73Z\"/><path d=\"M97.48,85.81,29.06.77H0V113.12H25.7V35.23l57,70.79c8,10,21.58,10,29.66,0l56.95-70.79v77.89H195V.77H165.9Z\"/><polygon points=\"409.96 0.77 260.51 0.77 260.51 113.12 411.21 113.12 414.99 90.4 286.21 90.4 286.21 68.31 404.86 68.31 404.86 45.58 286.21 45.58 286.21 23.49 409.96 23.49 409.96 0.77\"/><path d=\"M658,113.09,704.82.77H678.29l-35.88,86L600.13,11a21.31,21.31,0,0,0-36.94,0L520.9,86.74,485,.77H458.5l46.87,112.32h27.27l49-88.62,49,88.62Z\"/></g></g></svg>";
}