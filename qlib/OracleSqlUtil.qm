# -*- mode: qore; indent-tabs-mode: nil -*-
#! @file OracleSqlUtil.qm Qore user module for working with Oracle SQL data

/*  OracleSqlUtil.qm Copyright 2013 - 2023 Qore Technologies, s.r.o.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

# minimum required Qore version
%requires qore >= 1.14

# requires the SqlUtil module
%requires(reexport) SqlUtil >= 1.9

# requires the Util module
%requires Util >= 1.0

# the implementation is in OracleSqlUtilBase
%requires(reexport) OracleSqlUtilBase

# for bindOracleCollection
%try-module oracle
%define NO_ORACLE
%endtry

# don't use "$" signs for variables and class members, assume local variable scope
%new-style

# require type definitions everywhere
%require-types

# enable all warnings
%enable-all-warnings

module OracleSqlUtil {
    version = "1.6";
    desc = "user module for working with Oracle SQL data";
    author = "David Nichols <david@qore.org>";
    url = "http://qore.org";
    license = "MIT";
}

/*  Version History: see docs below
*/

/** @mainpage OracleSqlUtil Module

    @tableofcontents

    @section oraclesqlutilintro OracleSqlUtil Module Introduction

    The %OracleSqlUtil module provides a high level API for working with Oracle database objects.

    Usually this module is loaded on demand from the SqlUtil module, however to use this module
    directly, use \c "%requires OracleSqlUtil" in your code.

    All the public symbols in the module are defined in the OracleSqlUtil namespace

    @note This module requires the <a href="https://github.com/qorelanguage/module-oracle">oracle</a> binary module
    for communication with Oracle databases

    @see @ref pgsqlsqlutilbaseintro for implementation information about this module

    @section ora_relnotes Release Notes

    @subsection oracle16 OracleSqlUtil v1.6
    - updated to use the @ref oraclesqlutilbaseintro module for the base implementation

    @subsection oracle15 OracleSqlUtil v1.5
    - implemented support for generating queries based on generic expressions using the DataProvider module's generic
      expression support
      (<a href="https://github.com/qorelanguage/qore/issues/4538">issue 4538</a>)

    @subsection oracle144 OracleSqlUtil v1.4.4
    - allow a \c VARCHAR column to be created without a size, assume a default size
      (<a href="https://github.com/qorelanguage/qore/issues/4399">issue 4399</a>)

    @subsection oraclev143 OracleSqlUtil v1.4.3
    - added APIs to enable duplicate record creation errors to be detected
      (<a href="https://github.com/qorelanguage/qore/issues/4308">issue 4308</a>)

    @subsection v142 OracleSqlUtil v1.4.2
    - fixed a bug where keywords were not properly quoted in merge / upsert statements
      (<a href="https://github.com/qorelanguage/qore/issues/4297">issue 4297</a>)

    @subsection v141 OracleSqlUtil v1.4.1
    - fixed a bug where pseudocolumn references were used ambiguously in joins
      (<a href="https://github.com/qorelanguage/qore/issues/4214">issue 4214</a>)
    - fixed a bug where pseudocolumn names were quoted in queries leading to errors
      (<a href="https://github.com/qorelanguage/qore/issues/4210">issue 4210</a>)
    - fixed a bug generating queries with \c limit and \c forupdate
      (<a href="https://github.com/qorelanguage/qore/issues/4206">issue 4206</a>)

    @subsection v14 OracleSqlUtil v1.4
    - added support for the DataProvider module
      (<a href="https://github.com/qorelanguage/qore/issues/3545">issue 3545</a>)

    @subsection v131 OracleSqlUtil v1.3.1
    - fixed quoting of reserved words in column names in table alignment
      (<a href="https://github.com/qorelanguage/qore/issues/3400">issue 3400</a>)

    @subsection v13 OracleSqlUtil v1.3
    - added support for serializing and deserializing @ref SqlUtil::AbstractTable "AbstractTable" objects
      (<a href="https://github.com/qorelanguage/qore/issues/2663">issue 2663</a>)

    @subsection v125 OracleSqlUtil v1.2.5
    - worked around an Oracle bug in materialized view creation where when the schema user is missing the
      <tt>CREATE MATERIALIZED VIEW</tt> grant the table backing the view is created but the materialized view itself
      is not created causing future creation actions to fail
      (<a href="https://github.com/qorelanguage/qore/issues/2643">issue 2643</a>)

    @subsection v124 OracleSqlUtil v1.2.4
    - implemented support for custom column operators
      (<a href="https://github.com/qorelanguage/qore/issues/2314">issue 2314</a>)
    - implemented support for chained synonyms
      (<a href="https://github.com/qorelanguage/qore/issues/2408">issue 2408</a>)
    - allow to use DBA_* views instead of ALL_* if possible
      (<a href="https://github.com/qorelanguage/qore/issues/2418">issue 2418</a>)

    @subsection v123 OracleSqlUtil v1.2.3
    - fixed a bug in \c character_semantics for standalone column
      (<a href="https://github.com/qorelanguage/qore/issues/1688">issue 1688</a>)
    - implemented @ref cop_trunc_date() operator
      (<a href="https://github.com/qorelanguage/qore/issues/2032">issue 2032</a>)

    @subsection v122 OracleSqlUtil v1.2.2
    - fixed a bug in the \a force option (i.e. cascade) for dropping types
      (<a href="https://github.com/qorelanguage/qore/issues/1683">issue 1683</a>)

    @subsection v121 OracleSqlUtil v1.2.1
    - implemented the \a force option (i.e. cascade) for dropping code objects
      (<a href="https://github.com/qorelanguage/qore/issues/1314">issue 1314</a>)
    - worked around ORA-22165 from op_in() caused by Oracle's limit on number of collection elements
      (<a href="https://github.com/qorelanguage/qore/issues/1660">issue 1660</a>)

    @subsection v12 OracleSqlUtil v1.2
    - implemented support for the \c "returning" clause as an insert option
    - implemented support for views for DML in the @ref OracleSqlUtil::OracleTable class
    - implemented @ref OracleSqlUtil::OracleTable::getBaseType()
    - implemented support for Oracle pseudocolumns in queries
    - implemented support for @ref SqlUtil::cop_cast() operator
    - fixed bugs in @ref SqlUtil::cop_seq() and @ref SqlUtil::cop_seq_currval()
      (<a href="https://github.com/qorelanguage/qore/issues/624">issue 624</a>)
    - return lists from Oracle's data dictionary ordered
    - implemented @ref OracleSqlUtil::OracleTable::bindEmptyStringsAsNull()
    - implemented high-performance "upsert" (merge) support also supporting bulk DML
    - implemented @ref SqlUtil::cop_substr() and @ref SqlUtil::uop_substr() operators
      (<a href="https://github.com/qorelanguage/qore/issues/801">issue 801</a>)
    - implemented @ref SqlUtil::op_substr() where operator
      (<a href="https://github.com/qorelanguage/qore/issues/883">issue 883</a>)

    @subsection v11 OracleSqlUtil v1.1
    - fixed selects with "limit" but no "offset"
    - convert date/time values to timestamps with microseconds resolution instead of dates with second resolution when
      dynamically inserting values as strings in SQL (binding by value not affected)
    - fixed schema information classes when the "string-numbers" driver option is enabled

    @subsection v10 OracleSqlUtil v1.0
    - initial release
*/

#! the OracleSqlUtilBase namespace contains all the objects in the OracleSqlUtilBase module
public namespace OracleSqlUtil {
    #! returns an OracleTable object corresponding to the arguments
    public OracleTable sub get_table(AbstractDatasource nds, string nname, *hash<auto> opts) {
        return OracleSqlUtilBase::get_table(nds, nname, opts);
    }

    #! returns an OracleDatabase object corresponding to the arguments
    public OracleDatabase sub get_database(AbstractDatasource nds, *hash<auto> opts) {
        return OracleSqlUtilBase::get_database(nds, opts);
    }
}
