# -*- mode: qore; indent-tabs-mode: nil -*-
#! @file BulkSqlUtil.qm module for performing bulk DML operations with SqlUtil

/*  BulkSqlUtil.qm Copyright 2015 - 2017 Qore Technologies, s.r.o.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/
%strict-args

# minimum required Qore version
%requires qore >= 0.9.0

# require type definitions everywhere
%require-types

# enable all warnings
%enable-all-warnings

# assume local scope for variables, do not use "$" signs
%new-style

# use SqlUtil
%requires(reexport) SqlUtil

module BulkSqlUtil {
    version = "1.3";
    desc = "user module performing bulk DML operations with SqlUtil";
    author = "David Nichols <david@qore.org>";
    url = "http://qore.org";
    license = "MIT";
}

/** @mainpage BulkSqlUtil Module

    @tableofcontents

    @section bulksqlutilintro Introduction to the BulkSqlUtil Module

    The %BulkSqlUtil module provides APIs for bulk DML operations using <a href="../../SqlUtil/html/index.html">SqlUtil</a> in %Qore.
    Bulk DML is the process of sending multiple rows to the dataserver in a single operation which allows for
    the most efficient processing of large amounts of data.

    Currently insert and upsert (SQL merge) operations are supported.

    The main functionality provided by this module:
    - @ref BulkSqlUtil::AbstractBulkOperation "AbstractBulkOperation": abstract base class for bulk DML operation classes
    - @ref BulkSqlUtil::BulkInsertOperation "BulkInsertOperation": provides a high-level API for bulk DML inserts
    - @ref BulkSqlUtil::BulkUpsertOperation "BulkUpsertOperation": provides a high-level API for bulk DML upsert uperations (ie SQL merge)

    See the above classes for detailed information and examples.

    @section bulksqlutil_relnotes Release Notes

    @subsection bulksqlutil_v1_3 BulkSqlUtil v1.3
    - updated the module to use the @ref Qore::SQL::AbstractSQLStatement "AbstractSQLStatement" class instead of the @ref Qore::SQL::SQLStatement "SQLStatement"

    @subsection bulksqlutil_v1_2 BulkSqlUtil v1.2
    - updated the module to support drivers without bulk DML
    - updated for complex types
    - added @ref BulkSqlUtil::AbstractBulkOperation::size() "AbstractBulkOperation::size()"

    @subsection bulksqlutil_v1_1 BulkSqlUtil v1.1
    - fixed a bug in the @ref BulkSqlUtil::BulkInsertOperation "BulkInsertOperation" class where inserts would fail or silently insert invalid data in the second or later blocks when constant hashes were used (<a href="https://github.com/qorelanguage/qore/issues/1625">issue 1625</a>)

    @subsection bulksqlutil_v1_0 BulkSqlUtil v1.0
    - initial release of the module
*/

#! the BulkSqlUtil namespace contains all the definitions in the BulkSqlUtil module
public namespace BulkSqlUtil {

} # BulkSqlUtil namespace
